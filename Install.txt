clear && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo "  🚀 Instalador Pawn para VS Code v1.0" && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo "" && sleep 1 && echo "🔍 [1/12] Verificando extensões anteriores..." && EXT_FOUND=false && if code --list-extensions 2>/dev/null | grep -q "southclaws.vscode-pawn"; then EXT_FOUND=true; fi && if code --list-extensions 2>/dev/null | grep -q "sanaajani.taskrunnercode"; then EXT_FOUND=true; fi && if [ "$EXT_FOUND" = true ]; then echo "🗑️  Removendo extensões antigas..." && code --uninstall-extension southclaws.vscode-pawn >/dev/null 2>&1 && code --uninstall-extension sanaajani.taskrunnercode >/dev/null 2>&1 && echo "✓ Extensões removidas" && sleep 1; else echo "✓ Nenhuma extensão anterior detectada"; fi && sleep 1 && echo "" && echo "🧹 [2/12] Limpando diretório de trabalho..." && rm -rf * .* 2>/dev/null && if [ -z "$(ls -A 2>/dev/null)" ]; then echo "✓ Diretório limpo com sucesso"; else echo "⚠️  Alguns arquivos podem não ter sido removidos"; fi && sleep 1 && echo "" && echo "🔄 [3/12] Sincronizando repositórios do sistema..." && sudo apt update >/dev/null 2>&1 && if [ $? -eq 0 ]; then echo "✓ Repositórios sincronizados"; else echo "❌ Erro na sincronização"; exit 1; fi && sleep 1 && echo "" && echo "📦 [4/12] Instalando dependências essenciais..." && sudo apt install -y unzip zip wget >/dev/null 2>&1 && if command -v unzip >/dev/null && command -v zip >/dev/null && command -v wget >/dev/null; then echo "✓ Dependências instaladas [unzip, zip, wget]"; else echo "❌ Erro ao instalar dependências"; exit 1; fi && sleep 1 && echo "" && echo "⬇️  [5/12] Baixando compilador Pawn..." && wget -q --show-progress https://raw.githubusercontent.com/48348484488/VSCODE-Pawno-Compiler-For-Android/main/pawnc-3.10.10-linux.zip 2>&1 | grep -v "%" | tail -1 && if [ -f "pawnc-3.10.10-linux.zip" ]; then FILE_SIZE=$(du -h pawnc-3.10.10-linux.zip | cut -f1); echo "✓ Download concluído [$FILE_SIZE]"; else echo "❌ Erro no download do compilador"; exit 1; fi && sleep 1 && echo "" && echo "📂 [6/12] Extraindo compilador Pawn..." && unzip -q -o pawnc-3.10.10-linux.zip && if [ -d "pawncc" ] && [ -f "pawncc/bin/pawncc" ]; then echo "✓ Compilador extraído com sucesso"; else echo "❌ Erro na extração do compilador"; exit 1; fi && sleep 1 && echo "" && echo "🗑️  [7/12] Removendo arquivos temporários..." && rm -rf pawnc-3.10.10-linux.zip pawnc-3.10.10-linux.zip.* && if [ ! -f "pawnc-3.10.10-linux.zip" ]; then echo "✓ Arquivos temporários removidos"; else echo "⚠️  Alguns arquivos temporários permaneceram"; fi && sleep 1 && echo "" && echo "🔐 [8/12] Configurando permissões de execução..." && chmod +x pawncc/bin/pawncc && if [ -x "pawncc/bin/pawncc" ]; then echo "✓ Permissões configuradas corretamente"; else echo "❌ Erro ao configurar permissões"; exit 1; fi && sleep 1 && echo "" && echo "🔄 [9/12] Atualizando cache de pacotes..." && sudo apt update >/dev/null 2>&1 && echo "✓ Cache atualizado" && sleep 1 && echo "" && echo "🍷 [10/12] Instalando Wine64..." && sudo apt install -y wine64 >/dev/null 2>&1 && hash -r 2>/dev/null && WINE_DETECTED=false && WINE_CMD="" && if command -v wine64 >/dev/null 2>&1; then WINE_DETECTED=true && WINE_CMD="wine64"; elif command -v wine >/dev/null 2>&1; then WINE_DETECTED=true && WINE_CMD="wine"; fi && if [ "$WINE_DETECTED" = true ]; then WINE_VERSION=$($WINE_CMD --version 2>/dev/null | head -n1); echo "✓ Wine instalado [$WINE_CMD: $WINE_VERSION]"; else echo "⚠️  Wine não detectado (pode ser opcional)"; fi && sleep 1 && echo "" && echo "⚙️  [11/12] Configurando ambiente de desenvolvimento..." && wget -q https://github.com/48348484488/VSCODE-Pawno-Compiler-For-Android/raw/111fe8a432bc791b1a536409486471ae489dabf4/task.zip && if [ -f "task.zip" ]; then unzip -q -o task.zip && rm -f task.zip && mv vscode .vscode 2>/dev/null; fi && if [ -d ".vscode" ] && [ -f ".vscode/tasks.json" ]; then echo "✓ Ambiente configurado [tasks.json criado]"; else echo "❌ Erro na configuração do ambiente"; exit 1; fi && sleep 1 && echo "" && echo "🔌 [12/12] Instalando extensões do VS Code..." && code --install-extension southclaws.vscode-pawn >/dev/null 2>&1 && code --install-extension sanaajani.taskrunnercode >/dev/null 2>&1 && sleep 2 && EXT_PAWN=$(code --list-extensions 2>/dev/null | grep -c "southclaws.vscode-pawn") && EXT_TASK=$(code --list-extensions 2>/dev/null | grep -c "sanaajani.taskrunnercode") && TOTAL_EXT=$((EXT_PAWN + EXT_TASK)) && if [ "$TOTAL_EXT" -eq 2 ]; then echo "✓ Extensões instaladas [2/2 confirmadas]"; elif [ "$TOTAL_EXT" -eq 1 ]; then echo "⚠️  Extensões parcialmente instaladas [1/2]"; else echo "❌ Erro ao instalar extensões"; fi && sleep 2 && clear && echo "" && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo "  ✨ Relatório de Instalação Completo" && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo "" && echo "📊 COMPONENTES DO SISTEMA:" && echo "" && if [ -x "pawncc/bin/pawncc" ]; then PAWNCC_SIZE=$(du -h pawncc/bin/pawncc 2>/dev/null | cut -f1); echo "  ✅ Compilador Pawn"; echo "     └─ Localização: $(pwd)/pawncc/bin/pawncc"; echo "     └─ Tamanho: $PAWNCC_SIZE"; echo "     └─ Permissões: Executável"; else echo "  ❌ Compilador Pawn: FALHA NA INSTALAÇÃO"; fi && echo "" && WINE_DETECTED=false && WINE_CMD="" && if command -v wine64 >/dev/null 2>&1; then WINE_DETECTED=true && WINE_CMD="wine64"; elif command -v wine >/dev/null 2>&1; then WINE_DETECTED=true && WINE_CMD="wine"; fi && if [ "$WINE_DETECTED" = true ]; then WINE_VER=$($WINE_CMD --version 2>/dev/null | head -n1); echo "  ✅ Wine: $WINE_VER (comando: $WINE_CMD)"; else echo "  ⚠️  Wine: Não detectado"; fi && echo "" && if command -v code >/dev/null 2>&1; then VSCODE_VER=$(code --version 2>/dev/null | head -n1); echo "  ✅ Visual Studio Code: $VSCODE_VER"; else echo "  ❌ VS Code: Não detectado"; fi && echo "" && echo "🔌 EXTENSÕES INSTALADAS:" && echo "" && code --list-extensions 2>/dev/null | grep "southclaws.vscode-pawn" >/dev/null && echo "  ✅ southclaws.vscode-pawn (Pawn Language Support)" || echo "  ❌ southclaws.vscode-pawn (NÃO INSTALADA)" && code --list-extensions 2>/dev/null | grep "sanaajani.taskrunnercode" >/dev/null && echo "  ✅ sanaajani.taskrunnercode (Task Runner)" || echo "  ❌ sanaajani.taskrunnercode (NÃO INSTALADA)" && echo "" && echo "📁 CONFIGURAÇÃO DO AMBIENTE:" && echo "" && if [ -d ".vscode" ]; then echo "  ✅ Diretório .vscode criado"; if [ -f ".vscode/tasks.json" ]; then TASKS_SIZE=$(wc -l < .vscode/tasks.json 2>/dev/null); echo "     └─ tasks.json: $TASKS_SIZE linhas"; else echo "     └─ tasks.json: NÃO ENCONTRADO"; fi; else echo "  ❌ Diretório .vscode: NÃO CRIADO"; fi && echo "" && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && if [ -x "pawncc/bin/pawncc" ] && [ -d ".vscode" ]; then echo "  ✅ INSTALAÇÃO CONCLUÍDA COM SUCESSO"; echo "  🎯 Ambiente pronto para compilar scripts!"; else echo "  ⚠️  INSTALAÇÃO CONCLUÍDA COM AVISOS"; echo "  📝 Verifique os itens marcados acima"; fi && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo ""
